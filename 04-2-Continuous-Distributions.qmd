# Stetige Verteilungen

```{r}
# Load the packages used in this notebook

if (!require("tidyverse")) {
    install.packages("tidyverse")    
}

library("tidyverse")
```

## Die Gleichverteilung auf \[-1, 1\]

$$
X \sim \text{Uniform}(-1, 1)
$$

$$
f(x) = \begin{cases}
\frac{1}{2} & -1 \leq x \leq 1\\
0 & \text{sonst}
\end{cases} \\
$$

The density of the distribution is constant on the interval $[-1, 1]$ and zero elsewhere. The mean of the distribution is zero and the variance is $1/3$. The distribution function is linear on the interval $[-1, 1]$.

Die Dichte der Verteilung ist konstant auf dem Intervall $[-1, 1]$ und sonst null. Der Erwartungswert der Verteilung ist null und die Varianz beträgt $1/3$. Die Verteilungsfunktion ist linear auf dem Intervall $[-1, 1]$.

```{r}
#| label: fig-unif
#| fig-cap: Die Dichte der Gleichverteilung auf [-1, 1]

unif_dens_plt <- ggplot() +
  xlim(c(-2, 2)) +
  stat_function(fun = dunif, args = list(min = -1, max = 1), n = 1000) +
  labs(
    x = "x",
    y = "Dichte"
  )

unif_dens_plt
```

### Zufallsstichproben aus der Gleichverteilung

```{r}
# 10 Zufallszahlen aus der Gleichverteilung auf [-1, 1]

x_unif <- runif(10, min = -1, max = 1)
x_unif
```

```{r}
## Zählen Sie die Anzahl der Werte, die kleiner als 0 sind

sum(x_unif < 0)

# Wie viele Werte sind größer als 0.5?

```

```{r}
# Compute the probability of the event X < 0 using the punif function
# Berechnen Sie die Wahrscheinlichkeit des Ereignisses X < 0 mit der punif-Funktion

punif(0, min = -1, max = 1)

# Wie wahrscheinlich ist das Ereignis X > 0.5?

```


```{r}
# Berechnen Sie den Durchschnitt der Werte (mean-Funktion)

# Berechnen Sie die Varianz der Werte (var-Funktion)

```

## Die Normalverteilung


$$
f(x) = \frac{1}{\sqrt{2\pi}\sigma} \exp\left(-\frac{(x - \mu)^2}{2\sigma^2}\right)
$$

Because we will use this distribution very often, we will introduce a special notation for the normal distribution:

$$
X \sim N(\mu, \sigma^2)
$$


$$
\begin{align*}
E(X) & = \mu \\
Var(X) & = \sigma^2
\end{align*}
$$

```{r}
means <- c(0, 0, 0, 2, 2, 2)
sds <- c(0.2, 0.5, 1, 0.2, 0.5, 1)

df <- expand_grid(
    mean = c(0, 2),
    sd = c(0.2, 0.5, 1),
    x = seq(-3, 5, length.out = 200)
) %>%
mutate(
    y = dnorm(x, mean = mean, sd = sd),
    mean = paste0("mu = ", mean),
    sd = paste0("sigma = ", sd)
)

# Plot
ggplot(df, aes(x = x, y = y, color = mean, lty = sd)) +
  geom_line() +
  labs(x = "x", y = "Dichte", color = "Parameter") +
  ggtitle("Die Normalverteilung mit verschiedenen Parametern")
```

## How Does the Normal Distribution Arise?

```{r}
players_n <- 200
games_n <- 16

unif_games <- expand_grid(
  game = 1:games_n,
  player = 1:players_n
) %>%
  mutate(
    ## When used in mutate, n() returns the number of rows in a group of obs
    ## When the data is not grouped as here, it retuns the number of obs in the whole table
    result = runif(n(), min = -1, max = 1)
  ) %>%
  bind_rows(
    ## Add a initial values so that all players start with 0
    tibble(
      player = 1:players_n,
      game = 0L,
      result = 0,
    )
  )

unif_games <- unif_games %>%
  ## Sort the data by player id and game id
  arrange(player, game) %>%
  ## Groups the data by player, because we want the running totals to be calculated for each
  ## player separately
  group_by(player) %>%
  mutate(
    running_total = cumsum(result)
  )

## Illustration only
unif_games %>%
  ggplot(aes(x = game, y = running_total, group = player)) +
  geom_vline(xintercept = c(4, 8, 16), linetype = 2) +
  geom_hline(yintercept = 0) +
  geom_line(aes(color = player < 2, alpha = player < 2)) +
  scale_color_manual(values = c("skyblue4", "firebrick4")) +
  scale_alpha_manual(values = c(1 / 5, 1)) +
  scale_x_continuous("Game number", breaks = c(0, 4, 8, 12, 16)) +
  theme(legend.position = "none") +
  labs(y = "Running Total")
```

```{r}
unif_games %>%
  filter(game == 4) %>%
  ggplot(aes(x = running_total)) +
  geom_density() +
  labs(title = "Running total distribution at the 4-th game") +
  labs(
    x = "Running total"
  )
```


## Wahrscheinlichkeiten und Quantile der Normalverteilung



```{r, echo = FALSE}
#| label: fig-norm
#| fig-cap: Die Dichte der Standardnormalverteilung und die Wahrscheinlichkeit des Ereignisses $-1.96 < X < 1.96$.
#| code-fold: true

dt <- tibble(
  ## Creates a sequence of 100 numbers between -3 and 3
  x = seq(-4, 4, length.out = 1000)
) %>%
  mutate(
    dens = dnorm(x, mean = 0, sd = 1)
  )
ggplot() +
  ## Draws the normal density line
  geom_line(data = dt, aes(x = x, y = dens)) +
  ## Draws the shaded area under the curve between
  ## -1 and 1
  geom_ribbon(
    data = filter(dt, x > -1.96, x < 1.96),
    aes(x = x, y = dens, ymin = 0, ymax = dens),
    ## Controls the transparency of the area
    alpha = 0.3
  ) +
  annotate(
    "text",
    x = 0,
    y = dnorm(0) / 3,
    label = paste("Pr(-1.96 < X < 1.96) = ", round(pnorm(-1.96, 0, 1) - pnorm(1.96, 0, 1), 2), sep = " ")
  ) +
  geom_vline(xintercept = c(-1.96, 1.96), lty = 2, colour = "steelblue") +
  # geom_density(data = slopes, aes(x = t_statistic), color = "steelblue4") +
  scale_x_continuous(breaks = c(-1.96, 0, 1.96)) +
  labs(
    y = "Density"
  )
```

Berechnen Sie die Wahrscheinlichkeit des Ereignisses $X < 0.5$ für die Standardnormalverteilung.

```{r}
pnorm(0.5, mean=0, sd=1)
```

Berechnen Sie die Wahrscheinlichkeit des Ereignisses $-1.3 < X < 1$ für die Standardnormalverteilung.

```{r}

```

Compute the probability of the interval $[-1.3, 1]$ for the standard normal distribution.


```{r}

```

## Zufallsstichproben aus der Normalverteilung

Erzeugen Sie eine Zufallsstichprobe von 10 Werten aus der Standardnormalverteilung und speichern Sie sie in einer Variable `x_norm`.

```{r}
x_norm <- rnorm(10, mean = 0, sd = 1)
```

```{r}
# Zählen Sie die Anzahl der Werte, die kleiner als 0 sind

sum(x_norm < 0)
```

Vergleichen Sie das Ergebnis mit der theoretischen Wahrscheinlichkeit des Ereignisses $X < 0$.

```{r}
# Berechnen Sie den Durchschnitt der Werte


# Berechnen Sie die Standardabweichung der Werte

```


Vergleichen Sie Ihre Ergebnisse mit dem Erwartungswert und der Varianz der Standardnormalverteilung.
